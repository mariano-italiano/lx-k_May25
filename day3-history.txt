kubectl get node
kubectl get pods 
kubectl delete all,cj,jobs.batch --all
kubectl get ingressclasses.networking.k8s.io 
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml 
kubectl get all -n ingress-nginx
watch -n1 kubectl get all -n ingress-nginx
kubectl edit -n ingress-nginx svc ingress-nginx-controller
watch -n1 kubectl get all -n ingress-nginx
kubectl get pods
kubectl create deploy cars --image nginx 
kubectl create deploy forum --image nginx
kubectl get deplo,pod
kubectl get deploy,pod
kubectl expose deployment cars --name cars-svc --port 80
kubectl expose deployment forum --name forum-svc --port 80
cd lx-k_May25/
mkdir day3
cd day3
vi index-forum.html
vi index-cars.html
kubectl cp index-cars.html cars-6664876f54-rdxk6:/usr/share/nginx/html/index.html
kubectl cp index-forum.html forum-5b67cf4c64-4wms2:/usr/share/nginx/html/index.html
vi web-ingress.yaml
kubectl get ingressclasses.networking.k8s.io 
vi web-ingress.yaml
kubectl apply -f web-ingress.yaml
kubectl get ingress
kubectl describe ingress web-ingress 
kubectl edit ingress web-ingress 
kubectl describe ingress web-ingress 
kubectl logs -n ingress-nginx ingress-nginx-controller-6d5c687f-2mnlq 
kubectl logs -n ingress-nginx ingress-nginx-controller-6d5c687f-2mnlq -f
\
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh
helm repo add jetstack https://charts.jetstack.io
helm repo update
helm install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --set installCRDs=true
helm list
helm list -A
kubectl get all -n cert-manager
vi cert-issuer.yaml
kubectl apply -f cert-issuer.yaml
kubectl describe clusterissuers.cert-manager.io 
kubectl edit ingress web-ingress 
kubectl describe ingress web-ingress 
kubectl get secrets 
kubectl describe certificaterequests.cert-manager.io app-tls-1 
kubectl get certificaterequests.cert-manager.io
kubectl get certificate
kubectl get deployments.apps 
kubectl rollout restart deployment forum 
apt get update
sudo apt get update
sudo apt-get update
apt install nfs-common nfs-kernel-server cifs-utils -y
sudo apt install nfs-common nfs-kernel-server cifs-utils -y
sudo mkdir -p /var/nfs-share
sudo chown -R nobody:nogroup /var/nfs-share
sudo vi /etc/exports 
sudo exportfs -rav
vi volume-pod.yaml
cp -rp ../day2/multi-web.yaml volume-pod.yaml
vi volume-pod.yaml
kubectl apply -f volume-pod.yaml
kubectl get pods
kubectl exec -it volume-pod -- bash
echo '<html><body><h1>SIEMA Z VOLUME PODA</h1></body></html>' > /var/nfs-share/index.html
sudo echo '<html><body><h1>SIEMA Z VOLUME PODA</h1></body></html>' > /var/nfs-share/index.html
sudo -i
udo -i
kubectl exec -it volume-pod -- bash
kubectl expose pod volume-pod --port 80 --name volume-svc --type NodePort
kubectl edit pod volume-pod 
kubectl expose pod volume-pod --port 80 --name volume-svc --type NodePort
kubectl get svc
kubectl delete pod volume-pod 
vi volume-pod.yaml 
kubectl apply -f volume-pod.yaml
kubectl get pods
vi nfs-pv.yaml
kubectl get sc 
vi nfs-pv.yaml
kubectl apply -f nfs-pv.yaml
kubectl get pv
vi nfs-pvc.yaml
kubectl apply -f nfs-pvc.yaml
kubectl get pv,pvc
vi nfs-pvc.yaml 
kubectl replace --force -f nfs-pvc.yaml
kubectl get pv,pvc
vi nfs-volume-pod.yaml
kubectl apply -f nfs-volume-pod.yaml
kubectl get pods
kubectl expose pod nfs-volume-pod --port 80 --name nfs-volume-pod-svc --type NodePort
kubectl edit pod nfs-volume-pod 
kubectl expose pod nfs-volume-pod --port 80 --name nfs-volume-pod-svc --type NodePort
kubectl get svc
kubectl get pvc,pv
kubectl delete pod nfs-volume-pod 
kubectl delete pvc nfs-pvc 
kubectl get pvc,pv
kubectl apply -f nfs-pvc.yaml 
kubectl get pvc,pv
kubectl get pv nfs-pv -o yaml
kubectl patch pv nfs-pv -p '{"spec": {"claimRef": null }}'
kubectl get pv nfs-pv -o yaml
kubectl get pvc,pv
kubectl delete pv nfs-pv 
kubectl get pvc,pv
kubectl edit pv nfs-pv 
kubectl get pvc,pv
kubectl delete pvc nfs-pvc 
kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.31/deploy/local-path-storage.yaml
kubectl get all -n local-path-storage
kubectl get sc
kubectl edit sc local-path 
cp -rp nfs-pvc.yaml dynamic-pvc.yaml
vi dynamic-pvc.yaml
cp -rp nfs-volume-pod.yaml dynamic-pod.yaml
vi dynamic-pod.yaml
kubectl apply -f dynamic-pvc.yaml
kubectl get pv,pvc
kubectl apply -f dynamic-pod.yaml 
watch -n 1 kubectl get pv,pvc
kubectl delete pod dynamic-pod 
kubectl delete pvc dynamic-pvc 
watch -n 1 kubectl get pv,pvc
cd ..
git status
git add .
git commit -m "add day3 files"
git push
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
kubectl get cm
kubectl describe cm my-configmap 
vi envFile1
kubectl create cm from-env-file --from-env-file envFile1 
kubectl describe cm from-env-file 
cat /etc/ssh/sshd_config|grep -v "#"
vi ssh.conf
kubectl create cm sshd-config --from-file ssh.conf 
kubectl describe cm sshd-config 
kubectl delete cm sshd-config 
kubectl create cm sshd-config --from-file sshd_config=ssh.conf 
kubectl describe cm sshd-config 
kubectl create cm app-conf --from-literal C1=20 --from-literal username=root --from-literal execution="true" --from-file ssh.conf 
kubectl describe cm app-conf 
ls -la
cd day3
ls -la
cp volume-pod.yaml configmap-pod.yaml
vi configmap-pod.yaml
kubectl apply -f configmap-pod.yaml
kubectl get pod
kubectl exec -it configmap-pod -- printenv 
cp -rp configmap-pod.yaml configmap-vol-pod.yaml
vi configmap-vol-pod.yaml
kubectl apply -f configmap-vol-pod.yaml
kubectl exec -it configmap-vol-pod -- bash
kubectl edit cm my-configmap 
kubectl exec -it configmap-vol-pod -- bash
echo "SecurePass123" | base64
echo "U2VjdXJlUGFzczEyMwo=" | base64 -d
kubectl get certificate
kubectl create secret generic my-secret --from-literal root=SecurePass123 --from-literal audit-user=AnotherSecurePass!
kubectl get secrets 
kubectl describe secrets my-secret 
kubectl get secrets my-secret -o yaml
echo "QW5vdGhlclNlY3VyZVBhc3Mh" | base64 -d 
\
htpasswd -c .htpasswd mariola
sudo apt install apache2-utils
htpasswd -c .htpasswd mariola
cat .htpasswd 
kubectl create secret generic nginx-htpasswd --from-file .htpasswd 
rm .htpasswd 
ls -la
kubectl get secrets 
vi nginx-config.yaml
kubectl apply -f nginx-config.yaml
kubectl create deployment nginx-secure --imgae nginx --replicas 3 --dry-run=client -o yaml >nginx-secure.yaml
kubectl create deployment nginx-secure --image nginx --replicas 3 --dry-run=client -o yaml >nginx-secure.yaml
vi nginx-secure.yaml
kubectl apply -f nginx-secure.yaml
kubectl get pods
kubectl expose deployment nginx-secure --name nginx-secure-svc --type NodePort --port 80
kubectl get svc
vi final-app.yaml
kubectl apply -f final-app.yaml
watch -n1 kubectl get all -n app
kubectl get pv,pvc -n app
vi final-app.yaml 
kubectl edit pvc -n app postgres-pv-claim 
kubectl delete -f final-app.yaml 
vi final-app.yaml 
cat final-app.yaml | grep -i PersistentVolumeClaim -A 10
cat dynamic-pvc.yaml 
kubectl apply -f final-app.yaml
kubectl get pv
kubectl delete -f final-app.yaml 
vi final-app.yaml 
kubectl apply -f final-app.yaml
watch -n1 kubectl get all -n app
kubectl get pv,pvc
kubectl get pv,pvc -n app
kubectl get ingress -n app  flask-ingress 
vi final-app.yaml 
kubectl rollout restart -n app deployment postgres 
kubectl rollout restart -n app deployment flask 
watch -n1 kubectl get all -n app
ln -s --help
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml 
watch -n 1 kubectl get all -n kubernetes-dashboard
kubectl create sa admin-dashboard
kubectl delete sa admin-dashboard 
kubectl create sa admin-dashboard -n kubernetes-dashboard 
kubectl get clusterrole
kubectl create clusterrolebinding --help
kubectl create clusterrolebinding admin-dashboard-binding --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:admin-dashboard 
kubectl describe clusterrolebindings.rbac.authorization.k8s.io admin-dashboard-binding 
kubectl -n kubernetes-dashboard create token admin-dashboard
kubectl get svc -n kubernetes-dashboard 
kubectl edit svc -n kubernetes-dashboard kubernetes-dashboard 
kubectl get svc -n kubernetes-dashboard 
kubectl get cm -n app postgres-config -o yaml
wget https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml 
vi components.yaml
kubectl apply -f components.yaml
kubectl top
kubectl top node 
kubectl top pod -n app 
kubectl -n kubernetes-dashboard rollout restart deployment kubernetes-dashboard 
kubectl -n kubernetes-dashboard rollout restart deployment dashboard-metrics-scraper 
watch -n1 kubectl get all -n kubernetes-dashboard 
kubectl delete ns kubernetes-dashboard 
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml 
kubectl create sa admin-dashboard -n kubernetes-dashboard 
kubectl create clusterrolebinding admin-dashboard-binding --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:admin-dashboard 
kubectl -n kubernetes-dashboard create token admin-dashboard
kubectl edit svc -n kubernetes-dashboard kubernetes-dashboard 
kubectl top pod
kubectl top pod -A
cd ..
mkdir argocd
cd argocd/
mkdir app1
cd app1
cp -rp ../../day3/nginx-config.yaml .
cp -rp ../../day3/web-ingress.yaml .
kubectl run test-argo --image nginx --dry-run=client -o yaml > test-argo.yaml
vi test-argo.yaml
ls -la 
cd .
cd ..
git status
git add .
git commit -m "adding day3 files"
git push
kubectl create ns argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
watch -n1 kubectl get all -n argocd
kubectl edit -n argocd svc argocd-server
kubectl get -n argocd svc 
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d && echo
cd argocd/app1/
vi test-argo.yaml 
vi nginx-config.yaml 
vi web-ingress.yaml 
git add .
git commit -m "adding day3 files"
git push
kubectl get ns
kubectl create ns test-argocd
kubectl get ns
kubectl get all -n test-argocd 
kubectl get all,ingress,cm -n test-argocd 
kubectl describe cm -n test-argocd nginx-config 
helm list -A
helm uninstall cert-manager -n cert-manager
helm list -A
watch -n1 kubectl get all -n cert-manager 
history
cd ..
history | awk '$1 > 516' | cut -c 8- > day3-history.txt
